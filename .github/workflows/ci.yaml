name : CI pipeliene

on : push

jobs :
  project-ci-test :
    runs-on: ubuntu-latest
    steps :
      - name : Checkout repository
        uses : actions/checkout@v2
      - name : Set up Python
        uses : actions/setup-python@v2
        with :
          python-version : '3.11'
      - name : Cache pip dependencies
        uses : actions/cache@v3
        with :
          path : ~/.cache/pip
          key : ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys : |
            ${{ runner.os }}-pip-
      - name : Install dependencies
        run : |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name : Run pipeliene
        env :
          DAGSHUB_PAT : ${{ secrets.DAGSHUB_PAT }}
        run : |
          dvc repro
      - name : Run tests
        env :
          DAGSHUB_PAT : ${{ secrets.DAGSHUB_PAT }}
        run : |
          python -m unittest tests/test_model.py
      - name : promote model to production
        if : success()
        env :
          DAGSHUB_PAT : ${{ secrets.DAGSHUB_PAT }}
        run : |
          python scripts/promote_model.py
      - name : Run Flask app tests
        if : success()
        env :
          DAGSHUB_PAT : ${{ secrets.DAGSHUB_PAT }}
        run : |
          python -m unittest tests/test_flask_app.py
      - name : login to DockerHub
        if : success()
        uses : docker/login-action@v2
        with :
          username : ${{ secrets.DOCKER_USERNAME }}
          password : ${{ secrets.DOCKER_PASSWORD }}
      - name : build docker image
        if : success()
        run : |
          docker build -t ${{secrets.DOCKER_USERNAME}}/sentiment1:latest .
      - name : push docker image to DockerHub
        if : success()
        run : |
          docker push ${{secrets.DOCKER_USERNAME}}/sentiment1:latest
      
      - name : deploy to EC2
        if : success()
        uses : appleboy/ssh-action@v0.1.7
        with:
          host : ${{ secrets.EC2_HOST }}
          username : ${{ secrets.EC2_USER }}
          key : ${{ secrets.EC2_KEY }}
          script : |
            docker pull ${{secrets.DOCKER_USERNAME}}/sentiment1:latest
            docker stop sentiment_app || true
            docker rm sentiment_app || true
            docker run -d -p 80:5000 --name sentiment_app \ -e DAGSHUB_PAT= ${{ secrets.DAGSHUB_PAT }} \  ${{secrets.DOCKER_USERNAME}}/sentiment1:latest
